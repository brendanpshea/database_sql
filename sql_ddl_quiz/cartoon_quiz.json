[
    {
        "question": "Create a table named \"experiments\" for Dexter's Laboratory with columns 'experiment_id' (integer primary key) and 'name' (text).",
        "answer": "CREATE TABLE experiments (experiment_id INTEGER PRIMARY KEY, name TEXT);",
        "setup": "DROP TABLE IF EXISTS experiments;"
    },
    {
        "question": "Create a table \"krabby_patties\" with columns 'id' (integer primary key) and 'recipe_name' (text that cannot be null).",
        "answer": "CREATE TABLE krabby_patties (id INTEGER PRIMARY KEY, recipe_name TEXT NOT NULL);",
        "setup": "DROP TABLE IF EXISTS krabby_patties;"
    },
    {
        "question": "Create a table \"portal_guns\" with 'id' (integer primary key), 'dimension' (text), and 'power_level' (integer with default value 100).",
        "answer": "CREATE TABLE portal_guns (id INTEGER PRIMARY KEY, dimension TEXT, power_level INTEGER DEFAULT 100);",
        "setup": "DROP TABLE IF EXISTS portal_guns;"
    },
    {
        "question": "Insert a new experiment named 'Cheese Ray' with id 1 into Dexter's experiments table.",
        "answer": "INSERT INTO experiments (experiment_id, name) VALUES (1, 'Cheese Ray');",
        "setup": "DROP TABLE IF EXISTS experiments; CREATE TABLE experiments (experiment_id INTEGER PRIMARY KEY, name TEXT);"
    },
    {
        "question": "Create a table \"employees\" for Springfield Nuclear Power Plant with 'id' (integer primary key), 'name' (text), and 'department' (text with default value 'Safety').",
        "answer": "CREATE TABLE employees (id INTEGER PRIMARY KEY, name TEXT, department TEXT DEFAULT 'Safety');",
        "setup": "DROP TABLE IF EXISTS employees;"
    },
    {
        "question": "Create a table \"ingredients\" for Bob's Burgers with 'id' (integer primary key), 'name' (text not null), and 'in_stock' (boolean with default true).",
        "answer": "CREATE TABLE ingredients (id INTEGER PRIMARY KEY, name TEXT NOT NULL, in_stock BOOLEAN DEFAULT true);",
        "setup": "DROP TABLE IF EXISTS ingredients;"
    },
    {
        "question": "Insert three portal guns with IDs 1-3 and dimensions 'C-137', 'D-99', and 'Z-23' respectively.",
        "answer": "INSERT INTO portal_guns (id, dimension) VALUES (1, 'C-137'), (2, 'D-99'), (3, 'Z-23');",
        "setup": "DROP TABLE IF EXISTS portal_guns; CREATE TABLE portal_guns (id INTEGER PRIMARY KEY, dimension TEXT, power_level INTEGER DEFAULT 100);"
    },
    {
        "question": "Create a table \"certifications\" for nuclear plant employees with 'cert_id' (integer primary key), 'emp_id' (integer foreign key referencing employees.id), and 'cert_name' (text).",
        "answer": "CREATE TABLE certifications (cert_id INTEGER PRIMARY KEY, emp_id INTEGER, cert_name TEXT, FOREIGN KEY (emp_id) REFERENCES employees(id));",
        "setup": "DROP TABLE IF EXISTS certifications; DROP TABLE IF EXISTS employees; CREATE TABLE employees (id INTEGER PRIMARY KEY, name TEXT);"
    },
    {
        "question": "Create a table \"acme_products\" with 'id' (integer primary key), 'name' (text), 'price' (decimal), and 'danger_level' (integer between 1 and 10).",
        "answer": "CREATE TABLE acme_products (id INTEGER PRIMARY KEY, name TEXT, price DECIMAL, danger_level INTEGER CHECK (danger_level BETWEEN 1 AND 10));",
        "setup": "DROP TABLE IF EXISTS acme_products;"
    },
    {
        "question": "Create a table \"gold_vault\" for Scrooge McDuck with 'id' (integer primary key), 'gold_amount' (decimal positive number), and 'location' (text not null unique).",
        "answer": "CREATE TABLE gold_vault (id INTEGER PRIMARY KEY, gold_amount DECIMAL CHECK (gold_amount > 0), location TEXT NOT NULL UNIQUE);",
        "setup": "DROP TABLE IF EXISTS gold_vault;"
    }
]
]
